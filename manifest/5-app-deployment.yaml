apiVersion: apps/v1
kind: Deployment
metadata:
  name: perx
  labels:
    app: perx
    type: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  # replicas: 1
  selector:
    matchLabels:
      app: perx
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 50%
      maxSurge: 50%
  template:
    metadata:
      labels:
        app: perx
    spec:
      containers:
      - name: perx
        image: 207990345110.dkr.ecr.ap-south-1.amazonaws.com/todo:ui
        ports:
          - name: http
            containerPort: 8000
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        env:
        - name: MYSQL_HOSTNAME
          value: "mysql-primary"
        - name: MYSQL_PORT
          value: "3306"
        - name: MYSQL_DATABASE
          value: "todo"
        - name: MYSQL_USER
          value: "root"
        - name: MYSQL_PASSWORD
          value: "root@mysql"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 8
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 3
          periodSeconds: 5
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - ap-south-1a
                - ap-south-1b
